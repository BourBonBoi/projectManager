{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79241\\\\Desktop\\\\projectManager\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Form.css'; // Стили для Form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:5000/api/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: formData.email,\n        password: formData.password\n      })\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      console.error('Ошибка при авторизации:', errorData);\n      alert('Неверные данные для входа');\n    } else {\n      const data = await response.json();\n      console.log('Авторизация успешна:', data);\n      // Вы можете сохранить токен или перенаправить на другую страницу\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"base-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        placeholder: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form-button\",\n        type: \"submit\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"gihUhYl6HzneBx2KNJlfzoJVKOg=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","handleChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","console","error","alert","data","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/79241/Desktop/projectManager/client/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Form.css';  // Стили для Form\r\n\r\nconst Login = () => {\r\n    const [formData, setFormData] = useState({\r\n      email: '',\r\n      password: ''\r\n    });\r\n  \r\n    const handleChange = (e) => {\r\n      const { name, value } = e.target;\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value\r\n      });\r\n    };\r\n  \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n      \r\n        const response = await fetch('http://localhost:5000/api/auth/login',\r\n                                     {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            email: formData.email,\r\n            password: formData.password,\r\n          }),\r\n        });\r\n      \r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          console.error('Ошибка при авторизации:', errorData);\r\n          alert('Неверные данные для входа');\r\n        } else {\r\n          const data = await response.json();\r\n          console.log('Авторизация успешна:', data);\r\n          // Вы можете сохранить токен или перенаправить на другую страницу\r\n        }\r\n      };\r\n  return (\r\n    <div>\r\n      <h1 className=\"title\">Авторизация</h1>\r\n      <form className=\"base-form\" onSubmit={handleSubmit}>\r\n        <input className=\"form-input\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          placeholder=\"Электронная почта\"\r\n        />\r\n        <input className=\"form-input\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          placeholder=\"Пароль\"\r\n        />\r\n        <button className=\"form-button\" type=\"submit\">Войти</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}