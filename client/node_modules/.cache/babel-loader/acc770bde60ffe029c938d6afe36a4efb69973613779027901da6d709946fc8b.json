{"ast":null,"code":"const handleSubmit = async event => {\n  event.preventDefault();\n\n  // Отправляем POST-запрос на сервер\n  const response = await fetch('http://localhost:5000/api/auth/register', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(formData)\n  });\n  if (!response.ok) {\n    const errorData = await response.json();\n    console.error('Ошибка при регистрации:', errorData);\n  } else {\n    const data = await response.json();\n    console.log('Пользователь зарегистрирован:', data);\n  }\n};","map":{"version":3,"names":["handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","formData","ok","errorData","json","console","error","data","log"],"sources":["C:/Users/79241/Desktop/projectManager/client/src/pages/Register.js"],"sourcesContent":["const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    // Отправляем POST-запрос на сервер\r\n    const response = await fetch('http://localhost:5000/api/auth/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(formData),\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      console.error('Ошибка при регистрации:', errorData);\r\n    } else {\r\n      const data = await response.json();\r\n      console.log('Пользователь зарегистрирован:', data);\r\n    }\r\n  };"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,KAAK,IAAK;EAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;;EAEtB;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;IACtEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IACvCC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEH,SAAS,CAAC;EACrD,CAAC,MAAM;IACL,MAAMI,IAAI,GAAG,MAAMb,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACG,GAAG,CAAC,+BAA+B,EAAED,IAAI,CAAC;EACpD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}