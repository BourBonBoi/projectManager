{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79241\\\\Desktop\\\\projectManager\\\\client\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Form.css'; // Стили для About\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  // Состояния для данных формы\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Обработчик отправки формы\n  const handleSubmit = e => {\n    e.preventDefault(); // Предотвращаем перезагрузку страницы при отправке\n\n    // Здесь можно добавить логику для отправки данных на сервер, например, через fetch или axios\n    const formData = {\n      username,\n      email,\n      password\n    };\n    console.log('Данные для регистрации:', formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"base-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        className: \"form-label\",\n        children: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        required: true,\n        className: \"form-input\",\n        value: username,\n        onChange: e => setUsername(e.target.value) // Обработчик изменения поля\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        className: \"form-label\",\n        children: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        required: true,\n        className: \"form-input\",\n        value: email,\n        onChange: e => setEmail(e.target.value) // Обработчик изменения поля\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: \"form-label\",\n        children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        required: true,\n        className: \"form-input\",\n        value: password,\n        onChange: e => setPassword(e.target.value) // Обработчик изменения поля\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"form-button\",\n        children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"tRYla3vCO/TiaNXVkXSQty2VxO8=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","username","setUsername","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","formData","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","name","required","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/79241/Desktop/projectManager/client/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Form.css';  // Стили для About\r\n\r\n\r\nconst Register = () => {\r\n    // Состояния для данных формы\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    // Обработчик отправки формы\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();  // Предотвращаем перезагрузку страницы при отправке\r\n\r\n        // Здесь можно добавить логику для отправки данных на сервер, например, через fetch или axios\r\n        const formData = {\r\n            username,\r\n            email,\r\n            password,\r\n        };\r\n\r\n        console.log('Данные для регистрации:', formData);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1 >Регистрация</h1>\r\n            <form className=\"base-form\" onSubmit={handleSubmit}>\r\n                <label htmlFor=\"username\" className=\"form-label\">Имя пользователя:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    required\r\n                    className=\"form-input\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}  // Обработчик изменения поля\r\n                />\r\n\r\n                <label htmlFor=\"email\" className=\"form-label\">Электронная почта:</label>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    required\r\n                    className=\"form-input\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}  // Обработчик изменения поля\r\n                />\r\n\r\n                <label htmlFor=\"password\" className=\"form-label\">Пароль:</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    required\r\n                    className=\"form-input\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}  // Обработчик изменения поля\r\n                />\r\n\r\n                <button type=\"submit\" className=\"form-button\">Зарегистрироваться</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}